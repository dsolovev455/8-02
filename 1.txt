Pipeline:

/usr/local/go/bin/go test .
docker build . -t ubuntu-bionic:8082/hello-world:v$BUILD_NUMBER
docker login ubuntu-bionic:8082 -u admin -p 123 && docker push ubuntu-bionic:8082/hello-world:v$BUILD_NUMBER && docker logout

Вывод команды:


Started by user dsolovev
Running as SYSTEM
Building in workspace /var/lib/jenkins/workspace/MyProject
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/MyProject/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/netology-code/sdvps-materials.git # timeout=10
Fetching upstream changes from https://github.com/netology-code/sdvps-materials.git
 > git --version # timeout=10
 > git --version # 'git version 2.30.2'
 > git fetch --tags --force --progress -- https://github.com/netology-code/sdvps-materials.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision da5acf7bcb7f437637adf06fbd03a24dc2c8f13e (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f da5acf7bcb7f437637adf06fbd03a24dc2c8f13e # timeout=10
Commit message: "branch main, add creds for vagrant box"
First time build. Skipping changelog.
[MyProject] $ /bin/sh -xe /tmp/jenkins13807160680844118442.sh
+ /usr/local/go/bin/go test .
ok  	github.com/netology-code/sdvps-materials	(cached)
[MyProject] $ /bin/sh -xe /tmp/jenkins18083790418044052746.sh
+ docker build . -t ubuntu-bionic:8082/hello-world:v20
Sending build context to Docker daemon  239.6kB

Step 1/8 : FROM golang:1.16 AS builder
 ---> 972d8c0bc0fc
Step 2/8 : WORKDIR $GOPATH/src/github.com/netology-code/sdvps-materials
 ---> Using cache
 ---> 60734b9acdad
Step 3/8 : COPY . ./
 ---> Using cache
 ---> a2499f88961a
Step 4/8 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix nocgo -o /app .
 ---> Using cache
 ---> 159b215f3515
Step 5/8 : FROM alpine:latest
 ---> b2aa39c304c2
Step 6/8 : RUN apk -U add ca-certificates
 ---> Using cache
 ---> 9e4d027c2dfa
Step 7/8 : COPY --from=builder /app /app
 ---> Using cache
 ---> a44ef9a74322
Step 8/8 : CMD ["/app"]
 ---> Using cache
 ---> 3e2b1b003fe4
Successfully built 3e2b1b003fe4
Successfully tagged ubuntu-bionic:8082/hello-world:v20
[MyProject] $ /bin/sh -xe /tmp/jenkins8738772105501867241.sh
+ docker login ubuntu-bionic:8082 -u admin -p 123
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
+ docker push ubuntu-bionic:8082/hello-world:v20
The push refers to repository [ubuntu-bionic:8082/hello-world]
2222ee7e75a4: Preparing
c1a4ce9e655f: Preparing
7cd52847ad77: Preparing
2222ee7e75a4: Pushed
c1a4ce9e655f: Pushed
7cd52847ad77: Pushed
v20: digest: sha256:250105dc7aef970b95c6e253e286a543b69051ae0723f740d5798b650b8f46ed size: 950
+ docker logout
Removing login credentials for https://index.docker.io/v1/
Finished: SUCCESS
